#define  _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#define M 100

enum RGB {
	red,//0
	blue,//1
	green//2
};
int main() {
	//1,字面常量
	10;//整形字面常量
	'a';//字符型字面常量
	3.14;//浮点型字面常量
	//字面常量用来赋值
	
	//2,const修饰常变量，const是关键字
	const int num = 10;
	//num = 20;此时代码会报错，因为num被const修饰后是不可修改的，是一个常变量
	const int n = 10;
	//int arr[n] = { 0 };数组的空间大小指明只能用常量，不能是变量的
	//int arr[n] = { 0 };这里同样是错误的，虽然n是不能改的，是一个常变量，但是本质还是一个变量
	//只是c语言在语法层面上限制其为一个常量

	//3，#define 定义的标识符常量
	//这里实际就是宏定义，M的值就是100，这里的M是一个彻彻底底的常量，所以后面定义数组不会有问题
	int a = M;
	printf("%d\n", a);
	int arr[M] = { 0 };

	//4，枚举类型
	//对于一些变量的取值我们是可以一一列举的，所以就有了枚举类型
	 //enum RGB color = red;
	 //printf("%d %d %d", red, blue, green);//输出 0 1 2
	 //枚举类型的变量用enum声明，可能的取值就是枚举常量，可以用来赋值给用枚举类型定义的变量
	 //枚举常量也是有值的，从0开始一一对应
	 //这里的枚举类型有点类似于结构体类型
	char arr3[] = "abc";
	char arr4[3] = { 'a','b','c' };

}
 