#include<stdio.h>;
//int main() {
	/*char ch = 'w';
	char* pstr = &ch;
	*pstr = 's';
	printf("%c\n", ch);
	return 0;*/

	//const char* p = "abcdef";
	////*p = 'w';
	//printf("%c\n", *p);//输出a
	//printf("%s\n", p);//输出abcdef

	/*const char* p1 = "abcdef";
	const char* p2 = "abcdef";

	char arr1[7] = "abcdef";
	char arr2[7] = "abcdef";

	if (p1 == p2) {
		printf("p1 = p2\n");
	}
	else {
		printf("p1 != p2\n");
	}
	if (arr1 == arr2) {
		printf("arr1 = arr2\n");
	}
	else {
		printf("arr1 != arr2\n");
	}*/

	//指针数组
	/*int a = 10;
	int b = 20;
	int c = 30;
	int* arr[3] = { &a,&b,&c };
	for (int i = 0;i < 3;i++) {
		printf("%d ", *(arr[i]));
	}*/
	//int arr1[3] = { 1,2,3 };
	//int arr2[3] = { 2,3,4 };
	//int arr3[3] = { 3,4,5 };
	//int* parr[3] = { arr1,arr2,arr3 };
	//for (int i = 0;i < 3; i++) {
	//	for (int j = 0;j < 3;j++) {
	//		printf("%d ",parr[i][j]);
	//		//printf(printf("%d ",*(parr[i] + j)))
	//	}
	//	printf("\n");
	//}
	/*int a = 10;
	int* p = &a;
	int arr[10] = { 0 };*/
	//数组名是首元素地址
	/*printf("%p\n", arr);
	printf("%p\n", arr + 1);

	printf("%p\n", &arr[0]);
	printf("%p\n", &arr[0] + 1);

	printf("%p\n", &arr);
	printf("%p\n", &arr + 1);*/
	
	/*int arr[3] = { 1,2,3 };
	int(*p)[3] = &arr;
	for (int i = 0;i < 3;i++) {
		printf("%d\n", *(*p + i));
	}*/



//}
//void printf1(int arr[3][5],int c,int r) {
//	for (int i = 0;i < c;i++) {
//		for(int j = 0;j < r;j++) {
//			printf("%d ", arr[i][j]);
//		}
//		printf("\n");
//	}
//
//
//
//}
void printf1(int (*p)[5], int c, int r) {
	for (int i = 0;i < c;i++) {
		for (int j = 0;j < r;j++) {
			//printf("%d ",*( * (p + i) + j ));
			printf("%d ",p[i][j]);
		}
		printf("\n");
	}
}
int main() {
	int arr[3][5] = { {1,2,3,4,5},{2,3,4,5,6},{3,4,5,6,7} };
	//写一个函数输出这个二维数组
	int sz1 = sizeof(arr) / sizeof(arr[0]);
	int sz2 = sizeof(arr[0]) / sizeof(arr[0][0]);
	
	printf1(arr,sz1,sz2);

                int a = 0;
	int b = 0;
	int sum = 0;
	scanf("%d %d", &a, &b);
	sum = a + b;
	printf("%d\n", sum);
	printf("%d\n", sizeof(long double));
	return 0;
}